# import necessary libraries
import numpy as np
from keras.models import Sequential
from keras.layers import Dense

# define the input data
input_data = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])

# define the output data
output_data = np.array([[0], [1], [1], [0]])

# create a sequential model
model = Sequential()

# add input and hidden layers to the model
model.add(Dense(4, input_dim=2, activation='relu'))
model.add(Dense(2, activation='relu'))

# add output layer to the model
model.add(Dense(1, activation='sigmoid'))

# compile the model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# fit the model to the input and output data
model.fit(input_data, output_data, epochs=1000, verbose=0)

# evaluate the model on the input and output data
loss, accuracy = model.evaluate(input_data, output_data, verbose=0)

# print the model's accuracy
print('Accuracy: %.2f%%' % (accuracy * 100))
